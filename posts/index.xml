<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Webb</title>
    <link>https://KPW10452025.github.io/posts/</link>
    <description>Recent content in Posts on Webb</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Mon, 03 Jan 2022 08:28:11 +0800</lastBuildDate><atom:link href="https://KPW10452025.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to use git in terminal?</title>
      <link>https://KPW10452025.github.io/posts/001_how_to_use_git_in_terminal/</link>
      <pubDate>Sat, 17 Jul 2021 20:54:11 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/posts/001_how_to_use_git_in_terminal/</guid>
      <description>「基本常用 Code」  git init 將一個資料夾初始化後，可以開始使用 git 版本管理 git log 查看先前詳細的 commit 記錄。 git log &amp;ndash;oneline 查看先前簡易的 commit 記錄。 git log &amp;ndash;graph 查看先前詳細的 commit 記錄，視覺化分支。 git reflog 查看全部的 commit 記錄，包含跳版本的紀錄。（reference 參考） git status 檢查本地端檔案異動狀態。 git status -s 檢查本地端檔案異動狀態。（簡易顯示） git add [檔案或資料夾] 將指定的檔案或資料夾，加入版本控制。 git add . 將全部的檔案或資料夾，加入版本控制。 git commit 提交（commit）目前的異動。  會進入提交頁面。 按 s 鍵，進入INSERT狀態，並輸入將要提交的文字備註內容。 輸入完備註內容後按 esc (鍵盤左上角)，退出編輯狀態，然後輸入 :wq (一定要先輸入冒號)。   git commit -m &amp;ldquo;提交說明內容&amp;rdquo; 提交（commit）目前的異動並透過 -m 參數設定摘要說明文字。 git add [檔案或資料夾] git commit &amp;ndash;amend &amp;ndash;no-edit 在不增加新 commit 版本的狀態下，把新的異動加到目前最新的版本中。 但是 commit 的 ID 會改變。 git reset [檔案或資料夾] 把檔案或資料夾從 staged 狀態返回 modified 狀態。 git reset &amp;ndash;hard head 把版本移動到 head 版本裡（最新版）   「回到過去版本」  git reset &amp;ndash;hard head~1 git reset &amp;ndash;hard head^ 把該資料夾所有的檔案版本，移動到上一個版 git reset &amp;ndash;hard head~2 git reset &amp;ndash;hard head^^ 把該資料夾所有的檔案版本，移動到上兩個版 git reset &amp;ndash;hard [版本號碼] 把該資料夾所有的檔案版本，直接回到指定編號的版本   「回到未來版本」 通常會用到 git reflog 查詢 commit ID 然後用 git reset &amp;ndash;hard [版本號碼] 到達該版本 或是 git reset &amp;ndash;hard head@{數字} 到達該版本 「將『單個』檔案或資料夾，做版本變更」 git checkout [版本編號] &amp;ndash; [檔案或資料夾]</description>
    </item>
    
    <item>
      <title>How to use virtual environment in Python?</title>
      <link>https://KPW10452025.github.io/posts/002_how_to_use_virtual_environment_in_python/</link>
      <pubDate>Tue, 03 Aug 2021 21:34:44 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/posts/002_how_to_use_virtual_environment_in_python/</guid>
      <description>虛擬環境可以在任何資料夾下建立。
並且同一個資料夾可以建立多個虛擬環境。
 建立虛擬環境 把 terminal 位置 cd 到想建立虛擬環境的專案資料夾。
在 terminal 輸入 virtualenv 虛擬環境名稱。
舉例：
virtualenv testvenv 這樣會建立一個名為 testvenv 的虛擬環境。
專案資料夾會出現一個 testvenv 的資料夾。
 啟動虛擬環境
在 terminal 輸入 source 虛擬環境名稱/bin/activate
舉例：
source testvenv/bin/activate 這樣會啟動方才建立的 testvenv 虛擬環境。
 關閉虛擬環境
在 terminal 輸入 deactivate
deactivate  刪除虛擬環境
在專案資料夾裡找到和虛擬環境依樣名稱的資料夾，刪除這個資料夾就能刪除此虛擬環境。
本篇的說明例子就是刪除名為 testvenv 的資料夾即可。
 導出安裝模組 model
在 terminal 輸入 pip list 可以看目前的環境已安裝的模組
pip list 在 terminal 輸入 pip freeze &amp;gt; 檔案名稱.txt 可以把目前的環境已安裝的模組導出至此 txt 檔案</description>
    </item>
    
    <item>
      <title>Front end learning roadmap.</title>
      <link>https://KPW10452025.github.io/posts/004_front_end_learning_roadmap/</link>
      <pubDate>Mon, 03 Jan 2022 08:28:11 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/posts/004_front_end_learning_roadmap/</guid>
      <description>前端核心基礎階段
 網頁頁面技術：HTML 網頁頁面技術：CSS 網頁交互技術：JavaScript 網頁交互技術：Dom 網頁交互技術：Bom   前端核心高級階段
 網頁介面新技術：HTML5(語意化標籤、本地儲存、音頻視頻等) 網頁介面技術：CSS3(過度、動畫等) 移動端開發：移動端特性、適配等 前端樣式庫：Bootstrap 前端繪圖技術：Canvas 快速簡介圖表可視化庫：Echarts(折線圖、長條圖、餅狀圖、組合圖、綜合圖) 流行圖表可視化庫：D3 使用JS函數庫：JQuery 移動端類JQuery庫：Zepto 版本控制工具1：VSN 版本控制工具2：GIT &amp;amp; GITHUB   ＪＳ高級
 JS作用域及作用域鏈 JS原型及原型鏈 JS閉包 JS異步、事件循環機制 JS繼承 節流、防抖 深層複製、淺層複製 ES6新特性 ES7新特性 ES8~ES11新特性   ＪＳ後台技術階段
 強大的後臺JS：Node.js 高效的非關係行數據庫：MongoDB 簡潔的MongoDB操作者Mongoose 後台Web開發框架1：Express 後台Web開發框架2：Koa 後台模板引琴：EJS 即時通信聊天庫：Socket.io 網路通信協議：http、https 通信數據加密：MD5、jsonwebtoken、base64   前後端交互階段
 AJAX 新型AJAX請求方式：fetch 前後台AJAX請求庫：axios REST API 跨域全面解決方案 Mock後台數據庫接口：Mock.js、EasyMock 接口調適神器：PostMan 基於promise封包原生AJAX axios源碼分析 基於promise現實axios封裝及二次迭代   工程化階段
 模塊化規範1：Comman.</description>
    </item>
    
    <item>
      <title>The Mac terminal commands cheat sheet.</title>
      <link>https://KPW10452025.github.io/posts/003_the_mac_terminal_commands_cheat_sheet/</link>
      <pubDate>Wed, 24 Nov 2021 16:12:47 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/posts/003_the_mac_terminal_commands_cheat_sheet/</guid>
      <description>Here is some common used syntax in terminal on MacOS.   Create a new folder.  mkdir folder_name   Delete a file. (This deletes the file permanently; use with caution.)  rm file_name   Delete a folder and its contents.  rm -R folder_name   Create a new file without any extension.  touch file_name   Display the name of files and subdirectories in the directory.</description>
    </item>
    
    <item>
      <title>Theme Documentation - Basics</title>
      <link>https://KPW10452025.github.io/posts/theme-documentation-basics/</link>
      <pubDate>Fri, 06 Mar 2020 21:29:01 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/posts/theme-documentation-basics/</guid>
      <description>Gokarna is an opinionated theme with a focus on minimalism and simplicity.
Installation The following steps are here to help you initialize your new website. If you don’t know Hugo at all, we strongly suggest you learn more about it by following this great documentation for beginners.
a. Create Your Project Hugo provides a new command to create a new website:
hugo new site my_website cd my_website b. Install the Theme The theme’s repository is: https://github.</description>
    </item>
    
    <item>
      <title>Theme Documentation - Advanced</title>
      <link>https://KPW10452025.github.io/posts/theme-documentation-advanced/</link>
      <pubDate>Wed, 06 May 2020 21:29:01 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/posts/theme-documentation-advanced/</guid>
      <description>Gokarna is an opinionated theme with a focus on minimalism and simplicity.
Content Types This theme supports two types of content types: post and page. To specify them, you need to add them in your markdown metadata.
Post This is the default blog post type which will be shown in your &amp;ldquo;Posts&amp;rdquo; section and who&amp;rsquo;s tags will be indexed. Basically, a normal blog post.
--- title: &amp;#34;Hello, world!&amp;#34; date: 2021-01-01 description: &amp;#34;A blog post&amp;#34; image: &amp;#34;/path/to/image.</description>
    </item>
    
    <item>
      <title>Markdown Syntax Guide</title>
      <link>https://KPW10452025.github.io/posts/markdown-syntax/</link>
      <pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://KPW10452025.github.io/posts/markdown-syntax/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emoji Support</title>
      <link>https://KPW10452025.github.io/posts/emoji-support/</link>
      <pubDate>Thu, 01 Oct 2020 17:55:28 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/posts/emoji-support/</guid>
      <description>Emoji can be enabled in a Hugo project in a number of ways.
The emojify function can be called directly in templates or Inline Shortcodes.
To enable emoji globally, set enableEmoji to true in your site configuration and then you can type emoji shorthand codes directly in content files.
These begin and end with a colon and include the code of an emoji:
Gone camping! {?:}tent: Be back soon. That is so funny!</description>
    </item>
    
    <item>
      <title>Lorem Ipsum</title>
      <link>https://KPW10452025.github.io/posts/lorem-ipsum/</link>
      <pubDate>Thu, 15 Apr 2021 23:39:49 +0530</pubDate>
      
      <guid>https://KPW10452025.github.io/posts/lorem-ipsum/</guid>
      <description>Heading 1 &amp;ldquo;Lorem ipsum dolor sit amet, consectetaur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</description>
    </item>
    
  </channel>
</rss>
