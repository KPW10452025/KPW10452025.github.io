<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on Webb Kuo Blogs</title>
    <link>https://KPW10452025.github.io/tags/javascript/</link>
    <description>Recent content in javascript on Webb Kuo Blogs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Tue, 22 Mar 2022 20:44:17 +0800</lastBuildDate><atom:link href="https://KPW10452025.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JS 課程024 條件運算符</title>
      <link>https://KPW10452025.github.io/blog/js024/</link>
      <pubDate>Tue, 22 Mar 2022 20:44:17 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js024/</guid>
      <description>條件運算符，亦稱為三元運算符
語法：條件表達式 ? 語句1 : 語句2
 執行流程：條件運算符在執行時，首先對條件表達式進行求值：
  如果該值為 true 則執行語句1 並返回執行結果</description>
    </item>
    
    <item>
      <title>JS 課程023 相等運算符</title>
      <link>https://KPW10452025.github.io/blog/js023/</link>
      <pubDate>Fri, 04 Mar 2022 13:27:16 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js023/</guid>
      <description>== 相等（只比較值，不比較類型，類型不同時會自動轉換類型） != 不相等（只比較值，不比較類型，類型不同時會自動轉換類型） === 全相等（比較值，也比較類型） !== 不全相等（比較值，也比較類型）    相等運算符 ==  使用 == 來做相等運算，比較兩個值是否相等</description>
    </item>
    
    <item>
      <title>JS 課程022 關係運算符</title>
      <link>https://KPW10452025.github.io/blog/js022/</link>
      <pubDate>Fri, 04 Mar 2022 12:13:19 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js022/</guid>
      <description>關係運算符
用於比較兩個值的大小關係，並回傳比較後的結果： true false
  常見的符號有   大於 &amp;gt; 大於等於 &amp;gt;= 小於 &amp;lt; 小於等於 &amp;lt;=  var result = 2 &amp;gt; 1; console.</description>
    </item>
    
    <item>
      <title>JS 課程021 賦值運算符</title>
      <link>https://KPW10452025.github.io/blog/js021/</link>
      <pubDate>Thu, 03 Mar 2022 21:19:23 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js021/</guid>
      <description>賦值運算符
 等號 = 可以將符號右側的值賦值給等號左邊的變量  var a = 10; console.</description>
    </item>
    
    <item>
      <title>JS 課程020 非布林值的「與」&amp;&amp; 及「或」||</title>
      <link>https://KPW10452025.github.io/blog/js020/</link>
      <pubDate>Thu, 03 Mar 2022 13:03:26 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js020/</guid>
      <description>對非布林值進行「與」&amp;amp;&amp;amp; 及「或」|| 運算時
系統會先將其轉會為布林值後再進行運算，在返回原值
  true &amp;amp;&amp;amp; true  若兩個值經轉換後都為 true 則會返回後者</description>
    </item>
    
    <item>
      <title>JS 課程019 邏輯運算符</title>
      <link>https://KPW10452025.github.io/blog/js019/</link>
      <pubDate>Thu, 03 Mar 2022 06:37:27 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js019/</guid>
      <description>邏輯運算符：通常都用在布林值 Boolean 的判斷
 ! 非 &amp;amp;&amp;amp; 與 || 或    !</description>
    </item>
    
    <item>
      <title>JS 課程018 自增與自減之練習題</title>
      <link>https://KPW10452025.github.io/blog/js018/</link>
      <pubDate>Wed, 02 Mar 2022 21:24:04 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js018/</guid>
      <description>題目
var n1 = 10, n2 = 20; var n = n1++; console.</description>
    </item>
    
    <item>
      <title>JS 課程017 自增與自減</title>
      <link>https://KPW10452025.github.io/blog/js017/</link>
      <pubDate>Wed, 02 Mar 2022 20:36:36 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js017/</guid>
      <description>本篇要介紹的是，自增 ++ 與自減 &amp;ndash;
 自增 ++  通過自增可以使變量在自身的基礎上增加 1</description>
    </item>
    
    <item>
      <title>JS 課程016 一元運算符</title>
      <link>https://KPW10452025.github.io/blog/js016/</link>
      <pubDate>Wed, 02 Mar 2022 06:45:33 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js016/</guid>
      <description>本篇要介紹的是，一元運算符之簡介
何謂運算符？
運算符：亦可稱作操作符，可對一個或多個值進行運算
而一元運算符，及為只需要一個值就能操作的運算符
 正值 +    不會對數字產生影響</description>
    </item>
    
    <item>
      <title>JS 課程015 算數運算符</title>
      <link>https://KPW10452025.github.io/blog/js015/</link>
      <pubDate>Tue, 01 Mar 2022 21:20:04 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js015/</guid>
      <description>本篇要介紹的是，各種常用算數運算符在 JS 中的效果
何謂運算符？
運算符：亦可稱作操作符，可對一個或多個值進行運算
前面課程提到的 typeof 就是一個運算符
var a = 123; var result = typeof a; console.</description>
    </item>
    
    <item>
      <title>JS 課程014 強制類型轉換之 Boolean()函數</title>
      <link>https://KPW10452025.github.io/blog/js014/</link>
      <pubDate>Tue, 01 Mar 2022 06:42:00 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js014/</guid>
      <description>本篇要介紹的是，將其他的數據類型轉會為布林值 Boolean
若將其他的數據類型，轉化為布林值 Boolean
則會使用函數：Boolean()
其各類型轉換特性如下：
 將 Number 轉換為 Boolean: 除了 0 和 NaN 為 false，其他皆為 true 將 String 轉換為 Boolean: 除了完全沒字符時為 false，其他皆為 true（空格也算字符） 將 Null 轉換為 Boolean: 一定是 false 將 Undefined 轉換為 Boolean: 一定是 false 特別補充：將 Object 轉換為 Boolean: 一定是 true    將 Number 轉換為 Boolean:  var a = 123; a = Boolean(a); console.</description>
    </item>
    
    <item>
      <title>JS 課程013 JS 中的數字進位問題</title>
      <link>https://KPW10452025.github.io/blog/js013/</link>
      <pubDate>Mon, 28 Feb 2022 20:56:30 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js013/</guid>
      <description>本篇要介紹的是，JS 如果碰到各種進制問題時，要怎麼表示
 16 進位法：在 js 中，如果需要表示 16 進位的數字，則須以 0x 開頭  var a = 0x10; console.</description>
    </item>
    
    <item>
      <title>JS 課程012 強制類型轉換之 Number() 函數與 parseInt() 函數</title>
      <link>https://KPW10452025.github.io/blog/js012/</link>
      <pubDate>Mon, 28 Feb 2022 18:51:16 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js012/</guid>
      <description>本篇要介紹的是，將其他的數據類型轉會為數字 Number
其方法只有一種：
 Number() 函數  注意！！！：並不存在 toNumber() 方法！！！</description>
    </item>
    
    <item>
      <title>JS 課程011 強制類型轉換之 toString() 方法與 String() 函數</title>
      <link>https://KPW10452025.github.io/blog/js011/</link>
      <pubDate>Fri, 18 Feb 2022 19:50:17 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js011/</guid>
      <description>類型轉換：將其他的數據類型，轉換為 String、Number、Boolean
本篇要介紹的是，強制類型轉換為字符串 String
其方法有兩種：
 toString() 方法 String() 函數   方法一：調用被轉換數據類型的 toString() 方法 所謂調用 xxx 的 yyy 方法，即可視為 xxx.</description>
    </item>
    
    <item>
      <title>JS 課程010 Null &amp; Undefined</title>
      <link>https://KPW10452025.github.io/blog/js010/</link>
      <pubDate>Fri, 18 Feb 2022 19:07:10 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js010/</guid>
      <description>Null
When we var a variable is null, it means it is empty.</description>
    </item>
    
    <item>
      <title>JS 課程009 Boolean 布林值</title>
      <link>https://KPW10452025.github.io/blog/js009/</link>
      <pubDate>Fri, 18 Feb 2022 18:44:22 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js009/</guid>
      <description>Boolean is used to make logical judgments.
There only have two kinds of Boolean: True and False.</description>
    </item>
    
    <item>
      <title>JS 課程008 Number 數字</title>
      <link>https://KPW10452025.github.io/blog/js008/</link>
      <pubDate>Fri, 18 Feb 2022 18:08:47 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js008/</guid>
      <description>We can use the typeof operator to find the data type of a JS variable.</description>
    </item>
    
    <item>
      <title>JS 課程007 String 字符串</title>
      <link>https://KPW10452025.github.io/blog/js007/</link>
      <pubDate>Fri, 18 Feb 2022 17:03:03 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js007/</guid>
      <description>數據類型：數據類型指的就是字面量類型
在 JS 中共有六種數據類型：
一、String 字符串
二、Number 數字
三、Boolean 布爾值、布林值</description>
    </item>
    
    <item>
      <title>JS 課程006 標示符</title>
      <link>https://KPW10452025.github.io/blog/js006/</link>
      <pubDate>Fri, 18 Feb 2022 16:26:46 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js006/</guid>
      <description>在 JS 中所有可以自種命名的都可以稱為標示符。
例如：變量名、函數名、屬性名&amp;hellip;等。
命名規則：
一、標示符中可以包含所有字母、數字、 _ 、 $ ，但不能使用 # 、 @ &amp;hellip;等底線和錢字符以外的符號。</description>
    </item>
    
    <item>
      <title>JS 課程005 字面量Literals &amp; 變量Variables</title>
      <link>https://KPW10452025.github.io/blog/js005/</link>
      <pubDate>Fri, 18 Feb 2022 16:03:17 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js005/</guid>
      <description>literal 字面量 variable 變量   &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;JS005&amp;lt;/title&amp;gt; &amp;lt;script type=&amp;#34;text/javascript&amp;#34;&amp;gt; // In JS, we use &amp;#34;var&amp;#34; to declare a variable.</description>
    </item>
    
    <item>
      <title>JS 課程004 JS basic syntax</title>
      <link>https://KPW10452025.github.io/blog/js004/</link>
      <pubDate>Fri, 18 Feb 2022 02:11:29 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js004/</guid>
      <description>Comments in JS  // one line comment 單行註解  /* multi-line comments 多行註解 a for apple b for ball c for cat */  Strictly case sensitive.</description>
    </item>
    
    <item>
      <title>JS 課程003 JS 代碼編寫位置</title>
      <link>https://KPW10452025.github.io/blog/js003/</link>
      <pubDate>Fri, 18 Feb 2022 01:09:23 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js003/</guid>
      <description>attribute 屬性 execute 執行 practical application 實際應用 maintenance 維護 couple 偶合 quote 引用 caching mechanism 緩存機制    We can code the JS in the attributes of onclick.</description>
    </item>
    
    <item>
      <title>JS 課程002 JS HelloWord</title>
      <link>https://KPW10452025.github.io/blog/js002/</link>
      <pubDate>Thu, 17 Feb 2022 23:32:44 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js002/</guid>
      <description>&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;JS002&amp;lt;/title&amp;gt; &amp;lt;!-- JS 代碼需要邊寫道 script 標籤中 --&amp;gt; &amp;lt;!</description>
    </item>
    
    <item>
      <title>JS 課程001 JavaScript 簡介</title>
      <link>https://KPW10452025.github.io/blog/js001/</link>
      <pubDate>Thu, 17 Feb 2022 23:13:30 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/js001/</guid>
      <description>ECMAScript 是 JavaScript 標準，所以一般情況下這兩個詞是同一個意思。 但實際上 JavaScript 的含義要更大一些。 完整的 JavaScript 實現應該由以下三個部分構成：</description>
    </item>
    
    <item>
      <title>大前端學習</title>
      <link>https://KPW10452025.github.io/blog/00frond_end_learning/</link>
      <pubDate>Mon, 14 Feb 2022 11:50:47 +0800</pubDate>
      
      <guid>https://KPW10452025.github.io/blog/00frond_end_learning/</guid>
      <description>前端核心基礎階段
 網頁頁面技術：HTML 網頁頁面技術：CSS 網頁交互技術：JavaScript 網頁交互技術：Dom 網頁交互技術：Bom   前端核心高級階段</description>
    </item>
    
  </channel>
</rss>
